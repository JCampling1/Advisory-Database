{
  "schema_version": "1.4.0",
  "id": "GHSA-p82g-2xpp-m5r3",
  "modified": "2023-01-06T05:01:55Z",
  "published": "2020-09-11T21:18:05Z",
  "aliases": [
    "CVE-2015-5654"
  ],
  "summary": "Cross-Site Scripting in dojo",
  "details": "Versions of `dojo` prior to 1.2.0 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize HTML code in user-controlled input, allowing attackers to execute arbitrary JavaScript in the victim's browser.\n\n\n## Recommendation\nTo address the vulnerability identified in the Dojo package, where versions prior to 1.2.0 are susceptible to Cross-Site Scripting (XSS) attacks due to insufficient sanitization of HTML code in user-controlled input, here are the steps and recommendations to improve security:\n\n### 1. **Upgrade the Package**\n   - **Primary Recommendation**: Immediately upgrade the Dojo package to version 1.9.1 or later. This version contains the patch that fixes the XSS vulnerability. This can be done by updating your `package.json` file and running the appropriate package manager command.\n   \n   ```bash\n   npm install dojo@1.9.1 --save\n   ```\n\n### 2. **Verify and Test the Upgrade**\n   - **Testing**: After upgrading, thoroughly test your application to ensure that the upgrade does not introduce any regressions or issues. Focus on areas that render user inputs, as they are most likely to be affected by the change.\n   - **Automated Tests**: Implement automated tests to validate that the XSS vulnerability has been mitigated, and no new vulnerabilities are introduced.\n\n### 3. **Implement Additional Input Sanitization**\n   - **Sanitize Inputs**: Even after upgrading, consider adding additional layers of input sanitization and validation within your application. Use libraries like `DOMPurify` to sanitize user-generated content.\n   \n   ```javascript\n   const DOMPurify = require('dompurify');\n   const sanitizedInput = DOMPurify.sanitize(userInput);\n   ```\n\n   - **Content Security Policy (CSP)**: Implement a strict Content Security Policy (CSP) to prevent the execution of malicious scripts, further reducing the risk of XSS attacks.\n\n### 4. **Review and Harden Security Across the Application**\n   - **Audit All Dependencies**: Regularly audit all your application's dependencies using tools like `npm audit` or `Snyk` to identify and address any other vulnerabilities.\n   - **Review Code for XSS**: Conduct a code review to ensure that all user inputs are appropriately sanitized and encoded before being rendered in the browser.\n\n### 5. **Stay Informed and Updated**\n   - **Subscribe to Security Alerts**: Stay informed about security vulnerabilities by subscribing to security alerts for the dependencies used in your projects.\n   - **Regular Updates**: Regularly update your dependencies to the latest stable versions to benefit from ongoing security improvements.\n\n### 6. **Consider Using a Web Application Firewall (WAF)**\n   - **WAF Implementation**: If applicable, consider deploying a Web Application Firewall (WAF) to add an additional layer of protection against common web attacks, including XSS.\n\nBy following these steps, you can significantly mitigate the risk posed by the identified XSS vulnerability in the Dojo package and improve the overall security posture of your application.\n\n\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "npm",
        "name": "dojo"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "1.9.1"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "< 1.2.0"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-5654"
    },
    {
      "type": "WEB",
      "url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-5654"
    },
    {
      "type": "WEB",
      "url": "https://snyk.io/vuln/SNYK-JS-DOJO-174933"
    },
    {
      "type": "WEB",
      "url": "https://www.npmjs.com/advisories/973"
    },
    {
      "type": "WEB",
      "url": "http://jvn.jp/en/jp/JVN13456571/index.html"
    },
    {
      "type": "WEB",
      "url": "http://jvndb.jvn.jp/jvndb/JVNDB-2015-000153"
    },
    {
      "type": "WEB",
      "url": "http://www-01.ibm.com/support/docview.wss?uid=swg21975256"
    },
    {
      "type": "WEB",
      "url": "http://www.securityfocus.com/bid/77026"
    },
    {
      "type": "WEB",
      "url": "http://www.securitytracker.com/id/1034848"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-79"
    ],
    "severity": "CRITICAL",
    "github_reviewed": true,
    "github_reviewed_at": "2020-08-31T18:42:35Z",
    "nvd_published_at": null
  }
}