{
  "schema_version": "1.4.0",
  "id": "GHSA-f8vr-r385-rh5r",
  "modified": "2023-05-01T21:22:02Z",
  "published": "2023-04-11T15:30:30Z",
  "aliases": [
    "CVE-2023-26964"
  ],
  "summary": "h2 vulnerable to denial of service",
  "details": "Hyper is an HTTP library for Rust and h2 is an HTTP 2.0 client & server implementation for Rust. An issue was discovered in h2 v0.2.4 when processing header frames. It incorrectly processes the HTTP2 `RST_STREAM` frames by not always releasing the memory immediately upon receiving the reset frame, leading to stream stacking. As a result, the memory and CPU usage are high which can lead to a Denial of Service (DoS).\n\nThis issue affects users only when dealing with http2 connections\n\nLabels\nA-http2\nS-bug\nComments\nqinyushun commented on May 27, 2022\nVersion\nhyper-0.13.7\nh2-0.2.4\n\nPlatform\nwsl\n\nDescription\n\nSummary：\n\n​ Stream stacking occurs when Hyper processes HTTP2 RST_STREAM frames. As a result, the memory and CPU usage are high.\n\nStep：\n\nSend an HEADERS frame to open the stream, followed by an RST_STREAM frame to request cancellation of the stream\n\ndef reset_flood(h2_conn):\n    for i in range(1, 20000):\n        if i % 2 == 0:\n            continue\n        headers(h2_conn, i)\n        rst_stream(h2_conn, i)\nCreate multiple threads for sending.\n\nif __name__ == '__main__':\n    for i in range(0, 400):\n        try:\n            _thread.start_new_thread(send, (\"Thread-\" + str(i),))\n        except:\n            print(\"Error: Can not start thread\")\n    while 1:\n        pass\nResult：\n\nThe CPU usage of the Hyper server keeps increasing. As a result, the VM memory is used up.\nimage\n\nVulnerability analysis:\n\nWhen receiving a HEADERS frame, the h2 stores the corresponding stream content in the slab and sets a frame index to the ids. When receiving an RST_STREAM frame, h2 sets the stream to Closed and resets the related statistics. However, the stream memory is released only when stream.is_released() is true . When the RST_STREAM frame is received, the release is not triggered immediately. As a result, the size of the slab increases continuously.\n\nTest procedure:\n\nAdd the slab_len(),ids_len() method for Store to return the length of all flows and active flows.\nimage\n\nAdd the preceding two stream lengths to the recv_reset() method.\nimage\n\nAfter the test, when the HEADERS frame is repeatedly sent to open a stream or the RST_STREAM frame is sent to cancel the stream, the length of the ids does not exceed the value of max_recv, but the SLAB increases .The stream in the Closed state in the SLAB is released only after all frames on the connection are sent.\nimage\nimage\n\nThe max_concurrent_streams configuration can limit max_recv_streams, but it appears that in this scenario, the size of Slab is much larger than the max_concurrent_streams value and stacks up.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "h2"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.3.17"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "h2"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-26964"
    },
    {
      "type": "WEB",
      "url": "https://github.com/hyperium/h2/issues/621"
    },
    {
      "type": "WEB",
      "url": "https://github.com/hyperium/hyper/issues/2877"
    },
    {
      "type": "WEB",
      "url": "https://github.com/hyperium/h2/pull/668"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/hyperium/hyper"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZHBAE7LQARMPUEEV4TWET4D7G6WCWBUD/"
    },
    {
      "type": "WEB",
      "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/ZYRZ5Y2ALATKKPIITAFAJIS4TR4LUAHO/"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2023-0034.html"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-770"
    ],
    "severity": "HIGH",
    "github_reviewed": true,
    "github_reviewed_at": "2023-04-11T21:47:01Z",
    "nvd_published_at": "2023-04-11T14:15:00Z"
  }
}