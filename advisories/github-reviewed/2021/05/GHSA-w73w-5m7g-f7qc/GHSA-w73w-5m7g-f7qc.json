{
  "schema_version": "1.4.0",
  "id": "GHSA-w73w-5m7g-f7qc",
  "modified": "2023-08-29T18:46:19Z",
  "published": "2021-05-18T21:08:21Z",
  "aliases": [
    "CVE-2020-26160"
  ],
  "summary": "Authorization bypass in github.com/dgrijalva/jwt-go",
  "details": "There are two ways to fix the JWT-Go aud vulnerability:\n\nUpgrade to the golang-jwt library at version 3.2.1 or higher. This is the recommended solution, as it will fix the vulnerability and give you access to the latest features and bug fixes in the golang-jwt library.\nImplement your own audience check in any service that uses the jwt-go library. This is a more complex solution, but it is necessary if you are unable to upgrade to the golang-jwt library.\nHere is a step-by-step guide on how to implement your own audience check in Go:\n\n1. Import the jwt package:\n\n```\nimport \"github.com/dgrijalva/jwt-go\"\n```\n2. Define the expected audience for your service:\n\n```\nconst expectedAudience = \"my-service\"\n```\n3. Implement a function to validate the audience of a JWT token:\n```\nfunc validateAudience(token *jwt.Token) error {\n  // Get the audience from the token.\n  aud := token.Claims.(jwt.MapClaims)[\"aud\"].([]string)\n\n  // Check if the audience is empty.\n  if len(aud) == 0 {\n    return errors.New(\"invalid audience\")\n  }\n\n  // Check if the audience contains the expected value.\n  if !audContains(aud, expectedAudience) {\n    return errors.New(\"invalid audience\")\n  }\n\n  return nil\n}\n```\n4. Use the validateAudience() function to validate the audience of any JWT token before allowing access to your service:\n```\nfunc handleRequest(w http.ResponseWriter, r *http.Request) {\n  // Get the JWT token from the request.\n  token := r.Header.Get(\"Authorization\")\n\n  // Parse the JWT token.\n  parsedToken, err := jwt.Parse(token, func(token *jwt.Token) (interface{}, error) {\n    return []byte(\"my-secret-key\"), nil\n  })\n  if err != nil {\n    // Handle the error.\n  }\n\n  // Validate the audience of the JWT token.\n  err = validateAudience(parsedToken)\n  if err != nil {\n    // Handle the error.\n  }\n\n  // Allow access to your service.\n}\n```\nBy implementing your own audience check, you can protect your service from the JWT-Go aud vulnerability, even if you are unable to upgrade to the golang-jwt library.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "Go",
        "name": "github.com/dgrijalva/jwt-go"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "last_affected": "3.2.0"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "Go",
        "name": "github.com/dgrijalva/jwt-go/v4"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "4.0.0-preview1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-26160"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dgrijalva/jwt-go/issues/422"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dgrijalva/jwt-go/issues/462"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dgrijalva/jwt-go/pull/426"
    },
    {
      "type": "WEB",
      "url": "https://github.com/dgrijalva/jwt-go/commit/ec0a89a131e3e8567adcb21254a5cd20a70ea4ab"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/dgrijalva/jwt-go"
    },
    {
      "type": "WEB",
      "url": "https://pkg.go.dev/vuln/GO-2020-0017"
    },
    {
      "type": "WEB",
      "url": "https://snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDGRIJALVAJWTGO-596515"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-287",
      "CWE-755"
    ],
    "severity": "HIGH",
    "github_reviewed": true,
    "github_reviewed_at": "2021-05-18T20:54:59Z",
    "nvd_published_at": "2020-09-30T18:15:00Z"
  }
}