{
  "schema_version": "1.2.0",
  "id": "GHSA-g323-fr93-4j3c",
  "modified": "2022-05-12T00:00:23Z",
  "published": "2022-05-04T00:00:22Z",
  "aliases": [
    "CVE-2022-1473"
  ],
  "details": "The OPENSSL_LH_flush() function, which empties a hash table, contains a bug that breaks reuse of the memory occuppied by the removed hash table entries. This function is used when decoding certificates or keys. If a long lived process periodically decodes certificates or keys its memory usage will expand without bounds and the process might be terminated by the operating system causing a denial of service. Also traversing the empty hash table entries will take increasingly more time. Typically such long lived processes might be TLS clients or TLS servers configured to accept client certificate authentication. The function was added in the OpenSSL 3.0 version thus older releases are not affected by the issue. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [

  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-1473"
    },
    {
      "type": "WEB",
      "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=64c85430f95200b6b51fe9475bd5203f7c19daf1"
    },
    {
      "type": "WEB",
      "url": "https://security.netapp.com/advisory/ntap-20220602-0009/"
    },
    {
      "type": "WEB",
      "url": "https://www.openssl.org/news/secadv/20220503.txt"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-404"
    ],
    "severity": "HIGH",
    "github_reviewed": false
  }
}