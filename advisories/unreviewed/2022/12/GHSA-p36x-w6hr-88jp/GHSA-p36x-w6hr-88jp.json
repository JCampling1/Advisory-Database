{
  "schema_version": "1.3.0",
  "id": "GHSA-p36x-w6hr-88jp",
  "modified": "2023-01-27T19:55:04Z",
  "published": "2022-12-06T00:30:16Z",
  "aliases": [
    "CVE-2022-35255"
  ],
  "summary": "Node.js: Weak Randomness in WebCrypto Keygen",
  "details": "A weak randomness in WebCrypto keygen vulnerability exists in Node.js 18 due to a change with `EntropySource()` in `SecretKeyGenTraits::DoKeyGen()` in `src/crypto/crypto_keygen.cc`. \n\nThere are two problems with this: \n1. It does not check the return value, it assumes `EntropySource()` always succeeds, but it can (and sometimes will) fail. \n2. The random data returned by `EntropySource()` may not be cryptographically strong and therefore not suitable as keying material.\n\n### Impact\nSuccessful exploitation of this vulnerability could lead to disclosure of sensitive information or addition or modification of data.\n\n`EntropySource()` calls out to openssl's `RAND_poll()` and `RAND_bytes()` in a best-effort attempt to obtain random data.\nOpenSSL has a built-in CSPRNG but that can fail to initialize, in which case, either of the following is possible:\n- No random data gets written to the output buffer (i.e., the output is unmodified).\n- Weak random data is written. It's theoretically possible for the output to be fully predictable because the CSPRNG starts from a predictable state.\n\nThe output buffer is allocated in `SecretKeyGenTraits::DoKeyGen()` using `OPENSSL_malloc()` (`alias for CRYPTO_malloc()`), which in turn calls `malloc()`.\n`malloc()` does not zero the buffer but its contents may be predicted or manipulated by an external attacker (e.g., by manipulating an array buffer) then forcing the GC to reclaim it.\n\n### Patches\nThis issue was fixed in the [September 23rd 2022 Security Releases](https://nodejs.org/en/blog/vulnerability/september-2022-security-releases/). Upgrade to the following (or later) versions:\n- [Node.js v14.20.1 (LTS)](https://nodejs.org/en/blog/release/v14.20.1/)\n- [Node.js v16.17.1 (LTS)](https://nodejs.org/en/blog/release/v16.17.1/)\n- [Node.js v18.9.1 (Current)](https://nodejs.org/en/blog/release/v18.9.1/)\n\n",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "npm",
        "name": "Node.js"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "15.0.0"
            },
            {
              "fixed": "16.17.1 (LTS), 18.9.1 (Current)"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "< 18.9.1"
      }
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-35255"
    },
    {
      "type": "WEB",
      "url": "https://hackerone.com/reports/1690000"
    },
    {
      "type": "WEB",
      "url": "https://access.redhat.com/security/cve/cve-2022-35255"
    },
    {
      "type": "WEB",
      "url": "https://cert-portal.siemens.com/productcert/pdf/ssa-332410.pdf"
    },
    {
      "type": "WEB",
      "url": "https://nodejs.org/en/blog/vulnerability/september-2022-security-releases/"
    },
    {
      "type": "WEB",
      "url": "https://security.netapp.com/advisory/ntap-20230113-0002/"
    },
    {
      "type": "WEB",
      "url": "https://www.debian.org/security/2023/dsa-5326"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-338"
    ],
    "severity": "CRITICAL",
    "github_reviewed": false
  }
}